# This is an agnostic workflow configured to be used only as a
# called workflow from the workflow_trigger action.
# It is meant to be used by multiple teams for the same purpose.
---
name: Get External Artifacts

on:
  workflow_dispatch:
    inputs:
      agent_version:
        description: 'Agent Version to deploy.  Needs to match the version from the Release Workflow (all_solutions.yml). Format: X.X.X'
        required: true
      run_id:
        description: 'Run ID of the Release Workflow (all_solutions.yml) that was triggered by creating a Release in GitHub.  ID can be found in URL for run.'
        required: true
      # The repo and repo token might not be strictly required of we checkout
      # the required repositories locally. Still, best practice here would
      # be to support any repo
      download_repo:
        description: 'The repository to use for downloading deploy artifacts'
        required: false
      download_repo_token:
        description: 'The access token to use a non-local repository'
        required: false
      download_called_workflow:
        description: 'The workflow yaml to reference for the artifact download'
        required: true
      download_artifact_name:
        description: 'The name of the download artifact'
        required: true
      local_upload_artifact_name:
        description: 'The local artifact name to upload to the current/default/local repository'
        required: true
      local_upload_deploy_name:
        description: 'The local deploy tooling artifact name to upload to the current/default/local repository'
        required: true

# env:
  # DOTNET_NOLOGO: true

jobs:
  # This job containes no scripts, only actions and therefore
  # might be replicated as is, with changes to workflow called, etc.
  # Ask Amber about whay should be used for PHP team, IF
  # some of these values cannot be supported with inputs
  # Workflow_trigger can be used to call this workflow, It might
  # be prudent to create a newrelic-workflows repository, OR
  # just create workflows in the newrelic-actions to support the custom actions
  # as required.
  ##
  # The called workflow for dotnet requires artifacts generated from 
  # github/newrelic/fork-newrelic-dotnet-agent/.github/workflows/all_solutions.yml
  # Do we have an equivalent for PHP?
  # Do we call that workflow first to generate required artifacts.
  get-external-artifacts:
    name: Get and Publish Deploy Artifacts Locally
    runs-on: ubuntu-latest
    steps:
      - name: Download Deploy Artifacts
        # Below third party action will have to be monitored/watched
        # Also add the valued we need for external or non-local repos
        uses: dawidd6/action-download-artifact@v2
        with:
          # Check on below for access to repo
          # We should add a repo value:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # This workflow is generating artifacts, review and see what we need
          # in the custom action:
          # This might be best configured as a workflow_dipatch input
          ## WHAT WORKFLOW GENERATES ARTIFACTS (EXISTING ARTIFACT)
          workflow: ${{ github.event.inputs.download_called_workflow }}
          # This is referring to a workflow_dispatch input, run_id
          # will need to be replicated in acttion
          ## WHAT ARTIFACT NAME SHOULD BE USING TO TEST
          name: ${{ github.event.inputs.download_artifact_name }}
          path: ${{ github.workspace }}
          repo: ${{ github.repository }}

      - name: Upload Deploy Artifacts Locally
        uses: actions/upload-artifact@v2
        with:
          ## WHAT ARTIFACT WILL BE UPLOADED FOR TESTING?
          name: ${{ github.event.inputs.local_upload_artifact_name }}
          path: ${{ github.workspace }}/build/BuildArtifacts  # Does not exist in PHP agent repo
          if-no-files-found: error

      - name: Upload Deploy Tooling Locally
        uses: actions/upload-artifact@v2
        with:
          ## HOW ARE THESE PATHS GENERATED?
          name: ${{ github.event.inputs.local_upload_deploy_name }}
          path: ${{ github.workspace }}/deploy/  # Does not exist in PHP agent repo
          if-no-files-found: error
